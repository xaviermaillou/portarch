{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass Error extends global.Error {\n  /** @internal */\n  constructor(message, type, status) {\n    super();\n    global.Error.captureStackTrace(this, Error);\n\n    if (status) {\n      this.status = status;\n      this.message = message + ` (HTTP ${status}/${type})`;\n    } else {\n      this.message = message;\n    }\n  }\n  /** @internal */\n\n\n  static create(message, type, status) {\n    let klass;\n\n    if (!status) {\n      klass = Error;\n    } else if (status === 401 || status === 429) {\n      klass = AccountError;\n    } else if (status >= 400 && status <= 499) {\n      klass = ClientError;\n    } else if (status >= 500 && status <= 599) {\n      klass = ServerError;\n    } else {\n      klass = Error;\n    }\n\n    if (!message) {\n      message = \"No message was provided\";\n    }\n\n    return new klass(message, type, status);\n  }\n\n}\n\nexports.Error = Error;\n\nclass AccountError extends Error {}\n\nexports.AccountError = AccountError;\n\nclass ClientError extends Error {}\n\nexports.ClientError = ClientError;\n\nclass ServerError extends Error {}\n\nexports.ServerError = ServerError;\n\nclass ConnectionError extends Error {}\n\nexports.ConnectionError = ConnectionError;","map":{"version":3,"sources":["/Users/xavier/Documents/Développement/portarch/node_modules/tinify/lib/tinify/Error.js"],"names":["Object","defineProperty","exports","value","Error","global","constructor","message","type","status","captureStackTrace","create","klass","AccountError","ClientError","ServerError","ConnectionError"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,KAAN,SAAoBC,MAAM,CAACD,KAA3B,CAAiC;AAC7B;AACAE,EAAAA,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC/B;AACAJ,IAAAA,MAAM,CAACD,KAAP,CAAaM,iBAAb,CAA+B,IAA/B,EAAqCN,KAArC;;AACA,QAAIK,MAAJ,EAAY;AACR,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKF,OAAL,GAAeA,OAAO,GAAI,UAASE,MAAO,IAAGD,IAAK,GAAlD;AACH,KAHD,MAIK;AACD,WAAKD,OAAL,GAAeA,OAAf;AACH;AACJ;AACD;;;AACA,SAAOI,MAAP,CAAcJ,OAAd,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;AACjC,QAAIG,KAAJ;;AACA,QAAI,CAACH,MAAL,EAAa;AACTG,MAAAA,KAAK,GAAGR,KAAR;AACH,KAFD,MAGK,IAAIK,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACvCG,MAAAA,KAAK,GAAGC,YAAR;AACH,KAFI,MAGA,IAAIJ,MAAM,IAAI,GAAV,IAAiBA,MAAM,IAAI,GAA/B,EAAoC;AACrCG,MAAAA,KAAK,GAAGE,WAAR;AACH,KAFI,MAGA,IAAIL,MAAM,IAAI,GAAV,IAAiBA,MAAM,IAAI,GAA/B,EAAoC;AACrCG,MAAAA,KAAK,GAAGG,WAAR;AACH,KAFI,MAGA;AACDH,MAAAA,KAAK,GAAGR,KAAR;AACH;;AACD,QAAI,CAACG,OAAL,EAAc;AACVA,MAAAA,OAAO,GAAG,yBAAV;AACH;;AACD,WAAO,IAAIK,KAAJ,CAAUL,OAAV,EAAmBC,IAAnB,EAAyBC,MAAzB,CAAP;AACH;;AAnC4B;;AAqCjCP,OAAO,CAACE,KAAR,GAAgBA,KAAhB;;AACA,MAAMS,YAAN,SAA2BT,KAA3B,CAAiC;;AAEjCF,OAAO,CAACW,YAAR,GAAuBA,YAAvB;;AACA,MAAMC,WAAN,SAA0BV,KAA1B,CAAgC;;AAEhCF,OAAO,CAACY,WAAR,GAAsBA,WAAtB;;AACA,MAAMC,WAAN,SAA0BX,KAA1B,CAAgC;;AAEhCF,OAAO,CAACa,WAAR,GAAsBA,WAAtB;;AACA,MAAMC,eAAN,SAA8BZ,KAA9B,CAAoC;;AAEpCF,OAAO,CAACc,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Error extends global.Error {\n    /** @internal */\n    constructor(message, type, status) {\n        super();\n        global.Error.captureStackTrace(this, Error);\n        if (status) {\n            this.status = status;\n            this.message = message + ` (HTTP ${status}/${type})`;\n        }\n        else {\n            this.message = message;\n        }\n    }\n    /** @internal */\n    static create(message, type, status) {\n        let klass;\n        if (!status) {\n            klass = Error;\n        }\n        else if (status === 401 || status === 429) {\n            klass = AccountError;\n        }\n        else if (status >= 400 && status <= 499) {\n            klass = ClientError;\n        }\n        else if (status >= 500 && status <= 599) {\n            klass = ServerError;\n        }\n        else {\n            klass = Error;\n        }\n        if (!message) {\n            message = \"No message was provided\";\n        }\n        return new klass(message, type, status);\n    }\n}\nexports.Error = Error;\nclass AccountError extends Error {\n}\nexports.AccountError = AccountError;\nclass ClientError extends Error {\n}\nexports.ClientError = ClientError;\nclass ServerError extends Error {\n}\nexports.ServerError = ServerError;\nclass ConnectionError extends Error {\n}\nexports.ConnectionError = ConnectionError;\n"]},"metadata":{},"sourceType":"script"}