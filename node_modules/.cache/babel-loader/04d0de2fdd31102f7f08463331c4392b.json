{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst compat_1 = require(\"./compat\");\n\nconst ResultMeta_1 = require(\"./ResultMeta\");\n\nconst ignore = () => {};\n\nconst intify = v => parseInt(v, 10);\n\nclass Result extends ResultMeta_1.default {\n  /** @internal */\n  constructor(meta, data) {\n    super(meta);\n    this._data = data;\n  }\n  /** @internal */\n\n\n  meta() {\n    /* Ignore errors on data, because they'll be propagated to meta too. */\n    return this._data.catch(ignore) && this._meta;\n  }\n  /** @internal */\n\n\n  data() {\n    /* Ignore errors on meta, because they'll be propagated to data too. */\n    return this._meta.catch(ignore) && this._data;\n  }\n\n  toFile(path, callback) {\n    const writer = compat_1.writeFile.bind(null, path);\n    return compat_1.nodeify(this.data().then(writer), callback);\n  }\n\n  toBuffer(callback) {\n    return compat_1.nodeify(this.data(), callback);\n  }\n\n  size(callback) {\n    return compat_1.nodeify(this.meta().then(meta => intify(meta[\"content-length\"])), callback);\n  }\n\n  mediaType(callback) {\n    return compat_1.nodeify(this.meta().then(meta => meta[\"content-type\"]), callback);\n  }\n\n  contentType(callback) {\n    return this.mediaType(callback);\n  }\n\n}\n\nexports.default = Result;","map":{"version":3,"sources":["/Users/xavier/Documents/Développement/portarch/node_modules/tinify/lib/tinify/Result.js"],"names":["Object","defineProperty","exports","value","compat_1","require","ResultMeta_1","ignore","intify","v","parseInt","Result","default","constructor","meta","data","_data","catch","_meta","toFile","path","callback","writer","writeFile","bind","nodeify","then","toBuffer","size","mediaType","contentType"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,cAAD,CAA5B;;AACA,MAAME,MAAM,GAAG,MAAM,CAAG,CAAxB;;AACA,MAAMC,MAAM,GAAIC,CAAD,IAAOC,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAA9B;;AACA,MAAME,MAAN,SAAqBL,YAAY,CAACM,OAAlC,CAA0C;AACtC;AACAC,EAAAA,WAAW,CAACC,IAAD,EAAOC,IAAP,EAAa;AACpB,UAAMD,IAAN;AACA,SAAKE,KAAL,GAAaD,IAAb;AACH;AACD;;;AACAD,EAAAA,IAAI,GAAG;AACH;AACA,WAAO,KAAKE,KAAL,CAAWC,KAAX,CAAiBV,MAAjB,KAA4B,KAAKW,KAAxC;AACH;AACD;;;AACAH,EAAAA,IAAI,GAAG;AACH;AACA,WAAO,KAAKG,KAAL,CAAWD,KAAX,CAAiBV,MAAjB,KAA4B,KAAKS,KAAxC;AACH;;AACDG,EAAAA,MAAM,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACnB,UAAMC,MAAM,GAAGlB,QAAQ,CAACmB,SAAT,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8BJ,IAA9B,CAAf;AACA,WAAOhB,QAAQ,CAACqB,OAAT,CAAiB,KAAKV,IAAL,GAAYW,IAAZ,CAAiBJ,MAAjB,CAAjB,EAA2CD,QAA3C,CAAP;AACH;;AACDM,EAAAA,QAAQ,CAACN,QAAD,EAAW;AACf,WAAOjB,QAAQ,CAACqB,OAAT,CAAiB,KAAKV,IAAL,EAAjB,EAA8BM,QAA9B,CAAP;AACH;;AACDO,EAAAA,IAAI,CAACP,QAAD,EAAW;AACX,WAAOjB,QAAQ,CAACqB,OAAT,CAAiB,KAAKX,IAAL,GAAYY,IAAZ,CAAiBZ,IAAI,IAAIN,MAAM,CAACM,IAAI,CAAC,gBAAD,CAAL,CAA/B,CAAjB,EAA2EO,QAA3E,CAAP;AACH;;AACDQ,EAAAA,SAAS,CAACR,QAAD,EAAW;AAChB,WAAOjB,QAAQ,CAACqB,OAAT,CAAiB,KAAKX,IAAL,GAAYY,IAAZ,CAAiBZ,IAAI,IAAIA,IAAI,CAAC,cAAD,CAA7B,CAAjB,EAAiEO,QAAjE,CAAP;AACH;;AACDS,EAAAA,WAAW,CAACT,QAAD,EAAW;AAClB,WAAO,KAAKQ,SAAL,CAAeR,QAAf,CAAP;AACH;;AA/BqC;;AAiC1CnB,OAAO,CAACU,OAAR,GAAkBD,MAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst compat_1 = require(\"./compat\");\nconst ResultMeta_1 = require(\"./ResultMeta\");\nconst ignore = () => { };\nconst intify = (v) => parseInt(v, 10);\nclass Result extends ResultMeta_1.default {\n    /** @internal */\n    constructor(meta, data) {\n        super(meta);\n        this._data = data;\n    }\n    /** @internal */\n    meta() {\n        /* Ignore errors on data, because they'll be propagated to meta too. */\n        return this._data.catch(ignore) && this._meta;\n    }\n    /** @internal */\n    data() {\n        /* Ignore errors on meta, because they'll be propagated to data too. */\n        return this._meta.catch(ignore) && this._data;\n    }\n    toFile(path, callback) {\n        const writer = compat_1.writeFile.bind(null, path);\n        return compat_1.nodeify(this.data().then(writer), callback);\n    }\n    toBuffer(callback) {\n        return compat_1.nodeify(this.data(), callback);\n    }\n    size(callback) {\n        return compat_1.nodeify(this.meta().then(meta => intify(meta[\"content-length\"])), callback);\n    }\n    mediaType(callback) {\n        return compat_1.nodeify(this.meta().then(meta => meta[\"content-type\"]), callback);\n    }\n    contentType(callback) {\n        return this.mediaType(callback);\n    }\n}\nexports.default = Result;\n"]},"metadata":{},"sourceType":"script"}