{"ast":null,"code":"var _jsxFileName = \"/Users/xavier/Documents/De\\u0301veloppement/portarch/src/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Panneau from './components/panneau';\nimport Menu from './components/menu';\nimport firebase from './firebase';\nimport Hamburger from './components/hamburger';\n\nrequire('firebase/auth');\n\nfunction Useœuvres() {\n  const [œuvres, setœuvres] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  useEffect(() => {\n    firebase.firestore().collection('œuvres').onSnapshot(snapshot => {\n      const newœuvres = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        photos: []\n      }));\n      setœuvres(newœuvres);\n    });\n    firebase.firestore().collection('photos').onSnapshot(snapshot => {\n      const newPhotos = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setPhotos(newPhotos);\n    });\n    œuvres.forEach(œuvre => {\n      photos.forEach(photo => {\n        if (photo.œuvre === œuvre.id) {\n          œuvre.photos.push(photo.url);\n        }\n      });\n    });\n  }, []);\n  return œuvres;\n}\n/* function usePhotos() {\n    const [photos, setPhotos] = useState<any>([]);\n\n    useEffect(() => {\n        firebase.firestore().collection('photos').onSnapshot((snapshot) => {\n            const newPhotos = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n\n            setPhotos(newPhotos);\n        });\n    }, []);\n\n    return photos;\n} */\n\n\nconst App = () => {\n  const [auth, setAuth] = useState(false);\n  const [username, setUsername] = useState();\n  const œuvres = Useœuvres(); // const photos = usePhotos();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        setAuth(true);\n        setUsername(user.displayName);\n      } else {\n        // User is signed out.\n        setAuth(false);\n      }\n    });\n  }, []);\n  /* useEffect(() => {\n      œuvres.forEach((œuvre: any) => {\n          photos.forEach((photo: any) => {\n              if(photo.œuvre === œuvre.id) {\n                  œuvre.photos.push(photo.url);\n              }\n          })\n      });\n  }, [œuvres, photos]); */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"PORTARCH\"), /*#__PURE__*/React.createElement(Hamburger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Menu, {\n    auth: auth,\n    username: username,\n    setUsername: setUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panneauContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, œuvres.map(œuvre => /*#__PURE__*/React.createElement(Panneau, {\n    key: œuvre.id,\n    titre: œuvre.titre,\n    auteur: œuvre.auteur,\n    photo: œuvre.photo,\n    photos: œuvre.photos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/xavier/Documents/Développement/portarch/src/App.tsx"],"names":["React","useState","useEffect","Panneau","Menu","firebase","Hamburger","require","Useœuvres","œuvres","setœuvres","photos","setPhotos","firestore","collection","onSnapshot","snapshot","newœuvres","docs","map","doc","id","data","newPhotos","forEach","œuvre","photo","push","url","App","auth","setAuth","username","setUsername","onAuthStateChanged","user","displayName","titre","auteur"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AACAC,OAAO,CAAC,eAAD,CAAP;;AAEA,SAASC,SAAT,GAAqB;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAM,EAAN,CAApC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAM,EAAN,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ,CAACQ,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,EAA0CC,UAA1C,CAAsDC,QAAD,IAAc;AAC/D,YAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC1CC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADkC;AAE1C,WAAGD,GAAG,CAACE,IAAJ,EAFuC;AAG1CX,QAAAA,MAAM,EAAE;AAHkC,OAAV,CAAlB,CAAlB;AAMAD,MAAAA,SAAS,CAACO,SAAD,CAAT;AACH,KARD;AASAZ,IAAAA,QAAQ,CAACQ,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,EAA0CC,UAA1C,CAAsDC,QAAD,IAAc;AAC/D,YAAMO,SAAS,GAAGP,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC1CC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADkC;AAE1C,WAAGD,GAAG,CAACE,IAAJ;AAFuC,OAAV,CAAlB,CAAlB;AAKAV,MAAAA,SAAS,CAACW,SAAD,CAAT;AACH,KAPD;AAQAd,IAAAA,MAAM,CAACe,OAAP,CAAgBC,KAAD,IAAgB;AAC3Bd,MAAAA,MAAM,CAACa,OAAP,CAAgBE,KAAD,IAAgB;AAC3B,YAAGA,KAAK,CAACD,KAAN,KAAgBA,KAAK,CAACJ,EAAzB,EAA6B;AACzBI,UAAAA,KAAK,CAACd,MAAN,CAAagB,IAAb,CAAkBD,KAAK,CAACE,GAAxB;AACH;AACJ,OAJD;AAKH,KAND;AAOH,GAzBQ,EAyBN,EAzBM,CAAT;AA2BA,SAAOnB,MAAP;AACH;AAED;;;;;;;;;;;;;;;;;;AAiBA,MAAMoB,GAAa,GAAG,MAAM;AAExB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAM,CAAC+B,QAAD,EAAWC,WAAX,IAA0BhC,QAAQ,EAAxC;AACA,QAAMQ,MAAM,GAAGD,SAAS,EAAxB,CAJwB,CAKxB;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ,CAACyB,IAAT,GAAgBI,kBAAhB,CAAmC,UAASC,IAAT,EAAe;AAC9C,UAAIA,IAAJ,EAAU;AACR;AACAJ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,QAAAA,WAAW,CAACE,IAAI,CAACC,WAAN,CAAX;AACD,OAJD,MAIO;AACL;AACAL,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACJ,KATD;AAUH,GAXQ,EAWN,EAXM,CAAT;AAaA;;;;;;;;;;AAUH,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAkB,IAAA,QAAQ,EAAEE,QAA5B;AAAsC,IAAA,WAAW,EAAEC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,MAAM,CAACU,GAAP,CAAYM,KAAD,iBAAgB,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,KAAK,CAACJ,EAApB;AAAwB,IAAA,KAAK,EAAEI,KAAK,CAACY,KAArC;AAA4C,IAAA,MAAM,EAAEZ,KAAK,CAACa,MAA1D;AAAkE,IAAA,KAAK,EAAEb,KAAK,CAACC,KAA/E;AAAsF,IAAA,MAAM,EAAED,KAAK,CAACd,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CADH,CAJJ,CADD;AAUA,CAxCD;;AA0CA,eAAekB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Panneau from './components/panneau'\nimport Menu from './components/menu';\nimport firebase from './firebase';\nimport Hamburger from './components/hamburger';\nrequire('firebase/auth');\n\nfunction Useœuvres() {\n    const [œuvres, setœuvres] = useState<any>([]);\n    const [photos, setPhotos] = useState<any>([]);\n\n    useEffect(() => {\n        firebase.firestore().collection('œuvres').onSnapshot((snapshot) => {\n            const newœuvres = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n                photos: [] as any\n            }));\n    \n            setœuvres(newœuvres);\n        });\n        firebase.firestore().collection('photos').onSnapshot((snapshot) => {\n            const newPhotos = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n\n            setPhotos(newPhotos);\n        });\n        œuvres.forEach((œuvre: any) => {\n            photos.forEach((photo: any) => {\n                if(photo.œuvre === œuvre.id) {\n                    œuvre.photos.push(photo.url);\n                }\n            })\n        });\n    }, []);\n\n    return œuvres;\n}\n\n/* function usePhotos() {\n    const [photos, setPhotos] = useState<any>([]);\n\n    useEffect(() => {\n        firebase.firestore().collection('photos').onSnapshot((snapshot) => {\n            const newPhotos = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n\n            setPhotos(newPhotos);\n        });\n    }, []);\n\n    return photos;\n} */\n  \nconst App: React.FC = () => {\n\n    const [auth, setAuth] = useState<boolean>(false);\n    const [username, setUsername] = useState<string|null|undefined>();\n    const œuvres = Useœuvres();\n    // const photos = usePhotos();\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(function(user) {\n            if (user) {\n              // User is signed in.\n              setAuth(true);\n              setUsername(user.displayName);\n            } else {\n              // User is signed out.\n              setAuth(false)\n            }\n        });\n    }, []);\n\n    /* useEffect(() => {\n        œuvres.forEach((œuvre: any) => {\n            photos.forEach((photo: any) => {\n                if(photo.œuvre === œuvre.id) {\n                    œuvre.photos.push(photo.url);\n                }\n            })\n        });\n    }, [œuvres, photos]); */\n    \n return (\n  <div>\n      <h1>PORTARCH</h1>\n      <Hamburger />\n      <Menu auth={auth} username={username} setUsername={setUsername} />\n      <div className=\"panneauContainer\">\n        {œuvres.map((œuvre: any) => <Panneau key={œuvre.id} titre={œuvre.titre} auteur={œuvre.auteur} photo={œuvre.photo} photos={œuvre.photos} />)}\n      </div>\n  </div>\n )\n}\n  \nexport default App;"]},"metadata":{},"sourceType":"module"}