{"ast":null,"code":"var _jsxFileName = \"/Users/xavier/Documents/De\\u0301veloppement/portarch/src/components/config.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport firebase from '../firebase';\n\nconst Config = ({\n  username,\n  setUsername,\n  profilePicture,\n  setProfilePicture\n}) => {\n  const [name, setName] = useState('');\n  const [usernameDisplayed, setUsernameDisplayed] = useState('');\n  const [editName, setEditName] = useState(false);\n  const [editPhoto, setEditPhoto] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('Elegí un nombre');\n  useEffect(() => {\n    if (username) {\n      setName(username);\n    }\n\n    setUsernameDisplayed(username);\n  }, [username]);\n\n  const signOut = () => {\n    firebase.auth().signOut();\n    window.location.reload(true);\n  };\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleSubmitName = e => {\n    e.preventDefault();\n\n    if (name.length < 2) {\n      setName('');\n      setErrorMsg('Debe tener al menos 2 carácteres !');\n      setTimeout(function () {\n        setErrorMsg('Elegí un nombre');\n      }, 3000);\n      return;\n    }\n\n    var user = firebase.auth().currentUser;\n\n    if (user) {\n      user.updateProfile({\n        displayName: name\n      });\n      setEditName(false);\n      setUsername(name);\n    } else {\n      return;\n    }\n  };\n\n  const handleChangePhoto = e => {\n    var user = firebase.auth().currentUser;\n\n    if (e.target.files && user) {\n      var file = e.target.files[0];\n      var ref = firebase.storage().ref().child('profilePicture/' + user.uid);\n      var task = ref.put(file);\n      ref.getDownloadURL().then(url => {\n        user === null || user === void 0 ? void 0 : user.updateProfile({\n          photoURL: url\n        });\n        task.on('state_changed', function (snapshot) {\n          var percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n\n          if (percentage === 100) {\n            setProfilePicture(url);\n          }\n        });\n      });\n      setEditPhoto(false);\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"configContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, (username === null || editName === true) && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signupForm\",\n    onSubmit: e => {\n      handleSubmitName(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    type: \"text\",\n    autoComplete: \"off\",\n    className: \"editNameInput\",\n    placeholder: errorMsg,\n    value: name,\n    onChange: e => {\n      handleChangeName(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), username !== null && editName === false && /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, usernameDisplayed, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit\",\n    onClick: () => setEditName(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profilePictureGrand\",\n    style: {\n      backgroundImage: `url(${profilePicture})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), editPhoto === true && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signupForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"photo\",\n    type: \"file\",\n    onChange: e => {\n      handleChangePhoto(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setEditPhoto(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Editar foto de perfil\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 86\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Desconectarse\"));\n};\n\nexport default Config;","map":{"version":3,"sources":["/Users/xavier/Documents/Développement/portarch/src/components/config.tsx"],"names":["React","useState","useEffect","firebase","Config","username","setUsername","profilePicture","setProfilePicture","name","setName","usernameDisplayed","setUsernameDisplayed","editName","setEditName","editPhoto","setEditPhoto","errorMsg","setErrorMsg","signOut","auth","window","location","reload","handleChangeName","e","target","value","handleSubmitName","preventDefault","length","setTimeout","user","currentUser","updateProfile","displayName","handleChangePhoto","files","file","ref","storage","child","uid","task","put","getDownloadURL","then","url","photoURL","on","snapshot","percentage","bytesTransferred","totalBytes","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firebase from '../firebase';\n\ntype Props = {\n    username: string|null|undefined,\n    profilePicture: string|null|undefined,\n    setUsername: any,\n    setProfilePicture: any\n}\n\nconst Config: React.FC<Props> = ({ username, setUsername, profilePicture, setProfilePicture }) => {\n    const [name, setName] = useState<string>('');\n    const [usernameDisplayed, setUsernameDisplayed] = useState<string|null|undefined>('');\n    const [editName, setEditName] = useState<boolean>(false);\n    const [editPhoto, setEditPhoto] = useState<boolean>(false);\n    const [errorMsg, setErrorMsg] = useState<string>('Elegí un nombre');\n\n    useEffect(() => {\n        if (username) {setName(username)}\n        setUsernameDisplayed(username);\n    }, [username]);\n\n    const signOut = () => {\n        firebase.auth().signOut();\n        window.location.reload(true);\n    }\n\n    const handleChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setName(e.target.value);\n    }\n\n    const handleSubmitName = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if(name.length < 2) {\n            setName('');\n            setErrorMsg('Debe tener al menos 2 carácteres !');\n            setTimeout(function(){ setErrorMsg('Elegí un nombre'); }, 3000);\n            return;\n        }\n        var user = firebase.auth().currentUser;\n        if (user) {\n            user.updateProfile({\n                displayName: name,\n            });\n            setEditName(false);\n            setUsername(name);\n        } else {\n          return;\n        }\n    }\n\n    const handleChangePhoto = (e: React.ChangeEvent<HTMLInputElement>) => {\n        var user = firebase.auth().currentUser;\n        \n        if(e.target.files && user) {\n            var file = e.target.files[0];\n            var ref = firebase.storage().ref().child('profilePicture/' + user.uid);\n            var task = ref.put(file);\n            ref.getDownloadURL().then((url) => {\n                user?.updateProfile({\n                    photoURL: url\n                });\n                task.on('state_changed', function(snapshot) {\n                    var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) *100;\n                    if (percentage === 100) {setProfilePicture(url);}\n                });\n            });\n            setEditPhoto(false);\n        } else {\n            return;\n        }\n    }\n\n    return (\n        <div className=\"configContainer\">\n            {\n                (username === null || editName === true) &&\n                <form className=\"signupForm\" onSubmit={(e) => {handleSubmitName(e)}}>\n                    <input name=\"username\" type=\"text\" autoComplete=\"off\" className=\"editNameInput\" placeholder={errorMsg} value={name} onChange={(e) => {handleChangeName(e)}}/>\n                </form>\n            }\n            {\n                (username!== null && editName === false) &&\n                <h3 className=\"username\">{usernameDisplayed}<div className=\"edit\" onClick={() => setEditName(true)}></div></h3>\n            }\n            <div className=\"profilePictureGrand\" style={{backgroundImage: `url(${profilePicture})`}}></div>\n            {(editPhoto === true) &&\n                <form className=\"signupForm\">\n                    <input name=\"photo\" type=\"file\" onChange={(e) => {handleChangePhoto(e)}}/>\n                </form>\n            }\n            <button onClick={() => setEditPhoto(true)}>Editar foto de perfil</button><br />\n            <button onClick={signOut}>Desconectarse</button>\n        </div>\n    );\n}\n\nexport default Config;"]},"metadata":{},"sourceType":"module"}